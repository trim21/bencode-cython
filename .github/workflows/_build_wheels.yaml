name: Reusable workflow example

on:
  workflow_call:

jobs:
  build_wheels:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    env:
      SCCACHE_GHA_ENABLED: "true"
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: macos-13, cibw_arch: x86_64, cibw_build: "*[02468]-* *[02468]t-*", CXX: 'sccache clang++' }
          - { os: macos-13, cibw_arch: x86_64, cibw_build: "*[13579]-* *[13579]t-*", CXX: 'sccache clang++' }

          - { os: macos-14, cibw_arch: arm64, cibw_build: "*", CXX: 'sccache clang++' }

          - { os: windows-latest, cibw_arch: AMD64, cibw_build: "*[02468]-* *[02468]t-*", CXX: 'sccache cl.exe' }
          - { os: windows-latest, cibw_arch: AMD64, cibw_build: "*[13579]-* *[13579]t-*", CXX: 'sccache cl.exe' }

          - { os: ubuntu-latest, cibw_arch: x86_64, cibw_build: "*[02468]-* *[02468]t-*" }
          - { os: ubuntu-latest, cibw_arch: x86_64, cibw_build: "*[13579]-* *[13579]t-*" }

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Set up sccache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Restore cached Primes
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Local\pypa\cibuildwheel\Cache
            ~/Library/Caches/cibuildwheel
            ~/.cache/cibuildwheel
          key: 'cibuildwheel-${{ runner.os }}-${{ matrix.cibw_arch }}-${{ matrix.cibw_build }}'
          restore-keys: |
            cibuildwheel-${{ runner.os }}-${{ matrix.cibw_arch }}

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-suffix: "${{ runner.os }}-${{ matrix.cibw_arch }}-${{ matrix.cibw_build }}"

      - uses: pypa/cibuildwheel@v2.21.3
        env:
          CXX: "${{ matrix.CXX }}"
          CIBW_BUILD_FRONTEND: "build[uv]"
          CIBW_ALLOW_EMPTY: 'True'
          CIBW_FREE_THREADED_SUPPORT: true
          CIBW_ARCHS: ${{ matrix.cibw_arch }}
          CIBW_BUILD: ${{ matrix.cibw_build }}
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}/tests --assert-pkg-compiled=true"
          MACOSX_DEPLOYMENT_TARGET: '11.0'

      - run: ls ./wheelhouse/

      - uses: actions/upload-artifact@v4
        with:
          name: 'wheels-${{ runner.os }}-${{ matrix.cibw_arch }}-${{ strategy.job-index }}'
          path: ./wheelhouse/*.whl
          if-no-files-found: ignore

  build:
    name: make sdist and wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: pipx run build -w
        env:
          PY_BENCODE2_PURE_PYTHON: '1'

      - uses: actions/upload-artifact@v4
        with:
          name: 'wheels-dist'
          path: dist/*
