name: Reusable workflow example

on:
  workflow_call:

jobs:
  build_wheels:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { os: macos-13, cibw_arch: x86_64, cibw_build: "*" }
          - { os: macos-14, cibw_arch: arm64, cibw_build: "*" }
          - { os: windows-latest, cibw_arch: AMD64, cibw_build: "*" }

          - { os: ubuntu-latest, cibw_arch: x86_64, cibw_build: "*[02468]-*" }
          - { os: ubuntu-latest, cibw_arch: x86_64, cibw_build: "*[13579]-*" }
          - { os: ubuntu-latest, cibw_arch: x86_64, cibw_build: "*[02468]t-*" }
          - { os: ubuntu-latest, cibw_arch: x86_64, cibw_build: "*[13579]t-*" }

          - { os: [ self-hosted, linux, arm64 ], self_hosted: true, cibw_arch: aarch64, cibw_build: "*[02468]-*" }
          - { os: [ self-hosted, linux, arm64 ], self_hosted: true, cibw_arch: aarch64, cibw_build: "*[13579]-*" }
          - { os: [ self-hosted, linux, arm64 ], self_hosted: true, cibw_arch: aarch64, cibw_build: "*[02468]t-*" }
          - { os: [ self-hosted, linux, arm64 ], self_hosted: true, cibw_arch: aarch64, cibw_build: "*[13579]t-*" }

    #          - { os: ubuntu-latest, cibw_arch: aarch64, cibw_build: "*[05]-manylinux* *[05]t-manylinux*" }
    #          - { os: ubuntu-latest, cibw_arch: aarch64, cibw_build: "*[16]-manylinux* *[16]t-manylinux*" }
    #          - { os: ubuntu-latest, cibw_arch: aarch64, cibw_build: "*[27]-manylinux* *[27]t-manylinux*" }
    #          - { os: ubuntu-latest, cibw_arch: aarch64, cibw_build: "*[38]-manylinux* *[38]t-manylinux*" }
    #          - { os: ubuntu-latest, cibw_arch: aarch64, cibw_build: "*[49]-manylinux* *[49]t-manylinux*" }
    #
    #          - { os: ubuntu-latest, cibw_arch: aarch64, cibw_build: "*[05]-musllinux* *[05]t-musllinux*" }
    #          - { os: ubuntu-latest, cibw_arch: aarch64, cibw_build: "*[16]-musllinux* *[16]t-musllinux*" }
    #          - { os: ubuntu-latest, cibw_arch: aarch64, cibw_build: "*[27]-musllinux* *[27]t-musllinux*" }
    #          - { os: ubuntu-latest, cibw_arch: aarch64, cibw_build: "*[38]-musllinux* *[38]t-musllinux*" }
    #          - { os: ubuntu-latest, cibw_arch: aarch64, cibw_build: "*[49]-musllinux* *[49]t-musllinux*" }

    #          - { os: [ self-hosted, linux, ARM64 ], cibw_arch: aarch64, cibw_build: "*[02468]-*" }
    #          - { os: [ self-hosted, linux, ARM64 ], cibw_arch: aarch64, cibw_build: "*[13579]-*" }
    #          - { os: [ self-hosted, linux, ARM64 ], cibw_arch: aarch64, cibw_build: "*[02468]t-*" }
    #          - { os: [ self-hosted, linux, ARM64 ], cibw_arch: aarch64, cibw_build: "*[13579]t-*" }

    steps:
      #      - uses: docker/setup-qemu-action@v3
      # if: matrix.os == 'ubuntu-latest'

      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Restore cached Primes
        id: cache
        if: ${{ ! matrix.self_hosted }}
        uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Local\pypa\cibuildwheel\Cache
            ~/Library/Caches/cibuildwheel
            ~/.cache/cibuildwheel
          key: 'cibuildwheel-${{ runner.os }}-${{ matrix.cibw_arch }}-${{ matrix.cibw_build }}'
          restore-keys: |
            cibuildwheel-${{ runner.os }}-${{ matrix.cibw_arch }}

#      - uses: actions/setup-python@v5
#        if: ${{ matrix.self_hosted }}
#        with:
#          python-version: '3.11'

      - run: pipx run cibuildwheel
        if: ${{ matrix.self_hosted }}
        env:
          CIBW_ALLOW_EMPTY: 'True'
          CIBW_BUILD_VERBOSITY: 1
          CIBW_FREE_THREADED_SUPPORT: true
          CIBW_ARCHS: ${{ matrix.cibw_arch }}
          CIBW_BUILD: ${{ matrix.cibw_build }}
          CIBW_SKIP: 'pp* cp39-*'
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}/tests --assert-pkg-compiled=true"
          MACOSX_DEPLOYMENT_TARGET: '11.0'

      - uses: pypa/cibuildwheel@v2.21.3
        if: ${{ ! matrix.self_hosted }}
        env:
          CIBW_ALLOW_EMPTY: 'True'
          CIBW_BUILD_VERBOSITY: 1
          CIBW_FREE_THREADED_SUPPORT: true
          CIBW_ARCHS: ${{ matrix.cibw_arch }}
          CIBW_BUILD: ${{ matrix.cibw_build }}
          CIBW_SKIP: 'pp* cp39-*'
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}/tests --assert-pkg-compiled=true"
          MACOSX_DEPLOYMENT_TARGET: '11.0'

      - run: ls ./wheelhouse/

      - uses: actions/upload-artifact@v4
        with:
          name: 'wheels-${{ runner.os }}-${{ matrix.cibw_arch }}-${{ strategy.job-index }}'
          path: ./wheelhouse/*.whl
          if-no-files-found: ignore

  build:
    name: make sdist and wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: pipx run build
        env:
          PY_BENCODE2_PURE_PYTHON: '1'

      - uses: actions/upload-artifact@v4
        with:
          name: 'wheels-dist'
          path: dist/*
