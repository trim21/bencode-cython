name: tests

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main
    tags-ignore:
      - "*"

jobs:
  test-cp:
    strategy:
      max-parallel: 5
      matrix:
        os: [ "macos-12", "macos-13", "macos-14", "windows-latest", "ubuntu-latest" ]
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
        exclude:
          - { os: macos-14, python-version: '3.8' }
          - { os: macos-14, python-version: '3.9' }

    runs-on: "${{ matrix.os }}"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip" # caching pip dependencies

      - run: pip install -r requirements.txt

      - name: Run pytest
        run: python -m pytest --cov

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - run: mypyc bencode2
      - run: python -m pytest --cov

  test-py:
    strategy:
      max-parallel: 5
      matrix:
        os: [ "macos-12", "macos-13", "macos-14", "windows-latest", "ubuntu-latest" ]
        python-version:
          - 'pypy3.8'
          - 'pypy3.9'
          - 'pypy3.10'

    runs-on: "${{ matrix.os }}"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip" # caching pip dependencies

      - run: pip install -r requirements.txt

      - name: Run pytest
        run: python -m pytest --cov

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
