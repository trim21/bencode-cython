name: tests

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - master
    tags-ignore:
      - "*"

concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true

jobs:
  build:
    uses: ./.github/workflows/_build_wheels.yaml

  twine-check:
    name: Check dist
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - run: pipx run twine check --strict dist/*

  test-cp-py:
    strategy:
      fail-fast: false
      matrix:
        os:
          - "windows-latest"
          - "ubuntu-22.04"
          - "macos-13"
          - "macos-14"
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        exclude:
          - { os: macos-14, python-version: '3.8' }
          - { os: macos-14, python-version: '3.9' }

    runs-on: "${{ matrix.os }}"

    env:
      PY_BENCODE2_PURE_PYTHON: '1'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - run: pip install -e .
      - run: pip install -r requirements.txt

      - run: python -m pytest --cov --assert-pkg-compiled=false

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test-cp-py-nogil:
    strategy:
      fail-fast: false
      matrix:
        os:
#          - "windows-latest"
          - "ubuntu-24.04"
#          - "macos-14"

    runs-on: "${{ matrix.os }}"
    env:
      PY_BENCODE2_PURE_PYTHON: '1'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - uses: deadsnakes/action@v3.2.0
        with:
          python-version: 3.13
          nogil: true

      - run: pip install -e .
      - run: pip install -r requirements.txt

      - run: python -m pytest --cov --assert-pkg-compiled=false

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}


  test-pp:
    strategy:
      matrix:
        os:
          - "windows-latest"
          - "ubuntu-22.04"
          - "macos-13"
          - "macos-14"
        python-version:
          - 'pypy3.9'
          - 'pypy3.10'

    runs-on: "${{ matrix.os }}"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - run: pip install -e .
      - run: pip install -r requirements.txt

      - name: Run pytest
        run: python -m pytest --cov --assert-pkg-compiled=false

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test-pass:
    needs:
      - test-pp
      - test-cp-py
      - test-cp-py-nogil
      - twine-check
    runs-on: 'ubuntu-latest'
    steps:
      - run: 'echo success'
