name: Tests

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main
    tags-ignore:
      - '*'

permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write

jobs:
  test:
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"

    runs-on: '${{ matrix.os }}'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies

      - run: pip install -r requirements.txt

      - run: python setup.py build_ext --inplace
        env:
          COV: '1'
          CFLAGS: '-DCYTHON_TRACE=1'

      - name: Run pytest
        run: pytest --cov tests
        env:
          PYTHONPATH: '.'

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.3.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: trim21/py-bencode

      - name: Run pytest
        run: pytest bench.py --benchmark-json=bench.json
        env:
          PYTHONPATH: '.'

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Python Benchmark with pytest-benchmark
          tool: 'pytest'
          output-file-path: bench.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: true
          summary-always: true
